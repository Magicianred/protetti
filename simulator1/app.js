import{BALL_RADIUS,CANVAS_SIZE,DESKTOP_CANVAS_SIZE,STARTING_BALLS,RUN,STATIC_PEOPLE_PERCENTATGE,STATES}from"./options.js";import{replayButton,deathFilter,stayHomeFilter}from"./dom.js";import{Ball}from"./Ball.js";import{resetValues,updateCount}from"./results.js";let balls=[];const matchMedia=window.matchMedia("(min-width: 800px)");let isDesktop=matchMedia.matches;export const canvas=new window.p5(e=>{const t=()=>{let t=0;const s=document.getElementById("app_users");balls=[],Object.keys(STARTING_BALLS).forEach(a=>{Array.from({length:STARTING_BALLS[a]},()=>{const o=!RUN.filters.stayHome||(e.random(0,100)<STATIC_PEOPLE_PERCENTATGE||a===STATES.infected);balls[t]=new Ball({id:t,sketch:e,state:a,hasMovement:o,x:e.random(BALL_RADIUS,e.width-BALL_RADIUS),y:e.random(BALL_RADIUS,e.height-BALL_RADIUS),has_app_installed:100*Math.random()<s.value}),t++})})},s=()=>{const{height:t,width:s}=isDesktop?DESKTOP_CANVAS_SIZE:CANVAS_SIZE;e.createCanvas(s,t)};e.setup=()=>{s(),t(),matchMedia.addListener(e=>{isDesktop=e.matches,s(),t(),resetValues()}),replayButton.onclick=()=>{t(),resetValues()},deathFilter.onclick=()=>{RUN.filters.death=!RUN.filters.death,document.getElementById("death-count").classList.toggle("show",RUN.filters.death),t(),resetValues()},stayHomeFilter.onchange=()=>{RUN.filters.stayHome=!RUN.filters.stayHome,t(),resetValues()}},e.draw=()=>{e.background("white"),balls.forEach(e=>{e.checkState(),e.checkCollisions({others:balls}),e.move(),e.render()}),updateCount()}},document.getElementById("canvas"));
